<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>git学习</title>
    <link href="/2021/11/25/git%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/11/25/git%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="如何使用Git"><a href="#如何使用Git" class="headerlink" title="如何使用Git"></a>如何使用Git</h1><p>今天使用Git上传了pycharm的本地代码，总结一下教训</p><h2 id="创建新仓库"><a href="#创建新仓库" class="headerlink" title="创建新仓库"></a>创建新仓库</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">git</span> init<br><span class="hljs-symbol">git</span> <span class="hljs-keyword">add</span> .<br><span class="hljs-symbol">git</span> commit -m <span class="hljs-string">&quot;xxx&quot;</span><br><span class="hljs-symbol">git</span> branch -M main<br><span class="hljs-symbol">git</span> remote <span class="hljs-keyword">add</span> origin https:<span class="hljs-comment">//github.com/zyqinsane/zyqgenius.git</span><br><span class="hljs-symbol">git</span> <span class="hljs-keyword">push</span> -u origin main<br></code></pre></td></tr></table></figure><p>git branch -M 重命名分支，默认分支为master</p><p>本地是origin</p><p>默认的话是</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> -u <span class="hljs-built_in">origin</span> master<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>每日科研1124</title>
    <link href="/2021/11/24/%E6%AF%8F%E6%97%A5%E7%A7%91%E7%A0%941124/"/>
    <url>/2021/11/24/%E6%AF%8F%E6%97%A5%E7%A7%91%E7%A0%941124/</url>
    
    <content type="html"><![CDATA[<h1 id="BrainStorm"><a href="#BrainStorm" class="headerlink" title="BrainStorm"></a>BrainStorm</h1><h2 id="关于一次失败尝试的总结"><a href="#关于一次失败尝试的总结" class="headerlink" title="关于一次失败尝试的总结"></a>关于一次失败尝试的总结</h2><h3 id="单条链路"><a href="#单条链路" class="headerlink" title="单条链路"></a>单条链路</h3><p>为复现激光通信场景的频繁闪断，将预测的时间间隔由10min缩短为1min，这样就可以很好地模拟星地激光链路的闪断效果，卫星一次过顶时间窗口为10min，十个时隙可判断，根据失效占比来判断这个窗口内的建链可能性，看这十分钟内的正常/中断/资源浪费占比。一个窗口建链一次。也就是十分钟通信一次。将这个作为选择链路的标准之一。</p><h3 id="组网考虑"><a href="#组网考虑" class="headerlink" title="组网考虑"></a>组网考虑</h3><p>如果最优链路预测错误，预测不可用，实际可用；网络将会排除该预测“不可用”的地面站，选择次优的“可用”链路转发，次优的选择也会出现预测准确与否的情况。次优的选择可用，就会造成时延增加，把这个时延差值加入进去。</p><h3 id="马尔可夫模型的参数设置"><a href="#马尔可夫模型的参数设置" class="headerlink" title="马尔可夫模型的参数设置"></a>马尔可夫模型的参数设置</h3><p>肯定也有问题，因为不能随便设置一个概率，就把这个模型预测的结果和ILWC的序列比较，这样的准确率没有意义。</p><h3 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h3><p>现在就直接把ILWC的结果拿来用就好了，不用搞预测了，作为我的输入。<br>云图是更直接的方式，因为就是01表示。可以将戴政学长的输出作为我的模型输入。</p>]]></content>
    
    
    <categories>
      
      <category>科研思路</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>每日嗑盐20211123</title>
    <link href="/2021/11/24/%E6%AF%8F%E6%97%A5%E5%97%91%E7%9B%9020211123/"/>
    <url>/2021/11/24/%E6%AF%8F%E6%97%A5%E5%97%91%E7%9B%9020211123/</url>
    
    <content type="html"><![CDATA[<h1 id="1123-brainstorm"><a href="#1123-brainstorm" class="headerlink" title="1123 brainstorm"></a>1123 brainstorm</h1><p>拓宽新思路，不能局限原论文。</p><h2 id="通信过程"><a href="#通信过程" class="headerlink" title="通信过程"></a>通信过程</h2><p>PaCo模型选出来，从9条链路备选中，选出一条时延最低的链路，然后选择这条链路转发。可能出现四种情况，两种会受影响；一种是链路中断，一种是链路资源浪费。</p><h2 id="马尔可夫预测模型"><a href="#马尔可夫预测模型" class="headerlink" title="马尔可夫预测模型"></a>马尔可夫预测模型</h2><p>地面站上空的天气状况，下一时刻的状态仅和当前时刻有关，建模为一阶马尔可夫模型。自行设置状态转移矩阵。每十分钟预测一次，为的是和ILWC数据对齐。将预测结果和ILWC数据进行对比，得到四种情况的数目情况。</p><h2 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h2><p>100次转发，70～80次链路资源浪费，0～3次链路中断。</p><h2 id="误差分析"><a href="#误差分析" class="headerlink" title="误差分析"></a>误差分析</h2><p>1.模型本身就有问题，概率不能随意设定。ILWC原论文虽然采用的也是马尔可夫模型，但是参数是通过模型得到的。</p><p>2.所以和ILWC数据的对比也就没意义了。</p>]]></content>
    
    
    <categories>
      
      <category>科研思路</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>paper-reviewing</title>
    <link href="/2021/11/23/paper-reviewing/"/>
    <url>/2021/11/23/paper-reviewing/</url>
    
    <content type="html"><![CDATA[<h1 id="A-Distributed-and-Hybrid-Ground-Station-Network-for-Low-Earth-Orbit-Satellites"><a href="#A-Distributed-and-Hybrid-Ground-Station-Network-for-Low-Earth-Orbit-Satellites" class="headerlink" title="A Distributed and Hybrid Ground Station Network for Low Earth Orbit Satellites"></a>A Distributed and Hybrid Ground Station Network for Low Earth Orbit Satellites</h1>]]></content>
    
    
    <categories>
      
      <category>论文评论</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>docker学习</title>
    <link href="/2021/10/29/docker%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/10/29/docker%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="docker远程开发有感"><a href="#docker远程开发有感" class="headerlink" title="docker远程开发有感"></a>docker远程开发有感</h1><h2 id="pycharm连接docker"><a href="#pycharm连接docker" class="headerlink" title="pycharm连接docker"></a>pycharm连接docker</h2><p>建立磁盘映射</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> -v /xxx/xxx:/xxx containerID<br></code></pre></td></tr></table></figure><p>/xxx/xxx 宿主机</p><p>/xxx docker环境主机</p><p>ssh连接远程服务器</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -<span class="hljs-built_in">id</span> -p 本地端口(随便设置):<span class="hljs-number">22</span>(docker端口)/xxx/xxx:/xxx containerID<br></code></pre></td></tr></table></figure><h2 id="重新进入容器"><a href="#重新进入容器" class="headerlink" title="重新进入容器"></a>重新进入容器</h2><p>守护进程docker run -id<br>守护进程运行的时候使用<code>docker attach</code>不会重新进入容器，使用<code>docker run</code>会重新新建一个容器</p><p>此时容器运行的进程是ssh，而不是/bin/bash 也没有虚拟终端（-it）参数，所以是进入不到的.<br>这个时候使用</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker exec -it containerID <span class="hljs-regexp">/bin/</span>bash<br></code></pre></td></tr></table></figure><p>退出的时候使用<br><code>ctrl+P+Q</code></p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>numpy</title>
    <link href="/2021/09/27/Python/"/>
    <url>/2021/09/27/Python/</url>
    
    <content type="html"><![CDATA[<h1 id="随手记录一下"><a href="#随手记录一下" class="headerlink" title="随手记录一下"></a>随手记录一下</h1><h2 id="numpy-histogram"><a href="#numpy-histogram" class="headerlink" title="numpy.histogram"></a>numpy.histogram</h2><p>histogram(a,bins = 10, range =None, weights =None,density =False)</p><h3 id="in-需要统计数据的数组"><a href="#in-需要统计数据的数组" class="headerlink" title="in: 需要统计数据的数组"></a>in: 需要统计数据的数组</h3><p>bins指代统计的区间个数</p><p>range表示统计范围的下界和上界</p><p>weights指定数组每个元素的权值，histogram（）会对区间中数组所对应的权值进行求和</p><p>density为True时，返回每个区间的概率密度；False，返回每个区间中元素的个数</p><pre><code>&gt;&gt;&gt; a = np.random.rand(100)      #表示在（0,1）之间随机产生100个数&gt;&gt;&gt; np.histogram(a,bins=5,range=(0,1))(array([10, 24, 17, 19, 30]), array([0. , 0.2, 0.4, 0.6, 0.8, 1. ]))#表示在[0,0.2)之间有10个数，以此类推</code></pre><h3 id="out-返回每个区间内元素的统计情况，以及区间"><a href="#out-返回每个区间内元素的统计情况，以及区间" class="headerlink" title="out: 返回每个区间内元素的统计情况，以及区间"></a>out: 返回每个区间内元素的统计情况，以及区间</h3>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Git</title>
    <link href="/2021/09/14/Git/"/>
    <url>/2021/09/14/Git/</url>
    
    <content type="html"><![CDATA[<h1 id="工欲善其事，必先利其器"><a href="#工欲善其事，必先利其器" class="headerlink" title="工欲善其事，必先利其器"></a>工欲善其事，必先利其器</h1><p>还是得把git玩熟了。做博客就是先熟悉<a href="https://github.com/giacgiuliari/ccr-internet-backbones-in-space">github</a>的过程。</p><h2 id="git常用操作mark一下"><a href="#git常用操作mark一下" class="headerlink" title="git常用操作mark一下"></a>git常用操作mark一下</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p><code>git init</code> 初始化仓库<br><code>git clone</code> 拷贝一份远程仓库</p><h3 id="提交与修改"><a href="#提交与修改" class="headerlink" title="提交与修改"></a>提交与修改</h3><p><code>git add</code> 添加文件到仓库<br><code>git status</code> 查看仓库现在状态，显示变更文件<br><code>git commit</code> 提交暂存到本地仓库<br><code>git reset</code> 回退版本<br><code>git rm</code> 删除工作区文件<br><code>git mv</code> 移动或重命名工作区文件</p><h3 id="提交日志"><a href="#提交日志" class="headerlink" title="提交日志"></a>提交日志</h3><p><code>git log</code> 查看历史提交记录<br><code>git blame &lt;file&gt;</code> 以列表形式查看指定文件的历史修改记录</p><h3 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h3><p><code>git remote</code> 远程仓库操作<br><code>git fetch</code> 从远程获取代码库<br><code>git pull</code> 下载远程代码并合并<br><code>git push</code> 上传远程代码并合并</p><h2 id="散会"><a href="#散会" class="headerlink" title="散会"></a>散会</h2><p>饿了，开饭。</p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker</title>
    <link href="/2021/09/14/docker/"/>
    <url>/2021/09/14/docker/</url>
    
    <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p><a href="https://yeasy.gitbook.io/docker_practice/">Docker</a>，是比虚拟机好用很多，很多公司部署服务器必不可少的轻量化容器。正好手头的这个项目原作者用到了docker部署，那就趁机学习一波，为明年面试做准备。</p><h2 id="容易混淆的两个概念："><a href="#容易混淆的两个概念：" class="headerlink" title="容易混淆的两个概念："></a>容易混淆的两个概念：</h2><p>docker 相当于建立一个完整的操作系统，是不依赖于硬件的虚拟机；</p><p>pipenv是在docker容器中建立的虚拟python环境。</p><h2 id="2021-7-30-崩溃边缘"><a href="#2021-7-30-崩溃边缘" class="headerlink" title="2021.7.30 崩溃边缘"></a>2021.7.30 崩溃边缘</h2><p>搞了一天。<br>看别人的项目就要付出成倍的学习成本，sigh…..谁让自己没有能力把一个项目从无到有拎出来呢。<br>买来macbook也有小一个月了。之前配置好docker，开心的要死。但是实际轻度开发一个月以来，我发现了以下的问题：<br>由于我的项目是python，买mac之前使用的IDE是pycharm，这样看起来代码之间的逻辑比较清晰。但是由于是在docker里面配的python环境，所以这一个月以来，pycharm就成了我的一个代码阅读工具，或者是一个编辑器。把代码在本地编辑完成后，copy到docker中运行，调试。</p><p>这就很蛋疼了。</p><p>因为首先，docker没有可视化界面，而代码项目又有好多子代码。代码之间的切换让人十分头大。其次，docker中只能用vim进行开发（虽然大佬都比较喜欢），但是vim有个致命的缺点，就是对于代码缩进敏感的语言，简直不友好到了极点。python对于tab和空格，十分敏感，因为它就靠着这个区分函数之间的逻辑关系的。vim中，tab就是tab，空格就是空格，但是pycharm中，tab被自动作为四个空格处理。所以，复制过去，我还得一行一行调格式，宝贵的debug时间就这么被浪费了，那怎么行。</p><p>今天，我灵光一闪，为什么我就不能把代码放在本地，把docker远程部署好，在本地调试呢？这样的话，效率不就大大提高了！<br>说干就干，我上网搜了一下关键词，pycharm，docker。果然一堆结果。大致说的就是，把python的本地解释器换成docker里面的python，即可。想想确实是这个道理，作为高级语言的python，只需要解释器即可编译运行。有了解释器，就有了一切。</p><p>但是照葫芦画瓢搞了半天，我才发现，为什么tmd我的解释器栏咩有docker选项啊？？思前想后鼓捣了半天，我才想起来，不会是贫穷限制了我的想象力吧。果断搜索，社区版和专业版的区别，一行字让我心碎：社区版不支持远程开发。docker，可不就是为远程开发而生的吗。。</p><p>行吧。搞专业版。找了半天，也没有最新的破解版。m1芯片真难受。不过后来发现了一个要钱的下载无限重置试用期的专业版。哎，得了，就当尊重人家劳动成果。30软妹币解决。</p><p>装好了，美滋滋破解，打开。</p><p>果然，花了钱就是不一样。有docker了。半个小时，终于配置好了！<br>可是，从哪可以调试呢？</p><p>我想了半天，如果要实现方便的话，肯定是pycharm右击就可以直接运行，没有中间商赚差价。可是，为什么我的python包好多都没有呢？？还一片飘红（基金这样多好）？？？</p><p>又琢磨了半天。CSDN都被翻烂了。都是一篇抄一篇。垃圾。<br>又想了一下，终于知道我问题的特殊性在哪里了。原来我之前一直都只考虑了普遍性。啧。唯物辩证法还是得好好学。这个项目的特殊之处，就在于他使用了pipenv来创建python的虚拟环境！</p><p>我好像找到了问题的症结，高兴得心跳加快。国内网站不靠谱了，我google了一下：docker，pipenv，pycharm。颤抖的手点开第一条。</p><p>果然。<br>之前docker镜像创建的一个容器等于只是实现了一个丐版的操作系统。但是没有python的包啊！<br>项目用的python，就是这个容器，里的，用pipenv创建的python环境。</p><p>网上大佬说要用which python作为命令行。<br>果断搜索，找到了项目真正使用的python！但是复制完居然不能直接拷贝到pycharm的解释器里，离谱。。一个字一个字敲进去后，我激动地按下回车。<br>果然，python的包在屏幕上一个接一个跳了出来，就像我的心，也快跳出胸腔一样。奈斯！</p><p>这时候我才意识到，问题解决了。</p><p>学他妈的。</p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>今日心得</title>
    <link href="/2021/09/14/%E4%BB%8A%E6%97%A5%E5%BF%83%E5%BE%97/"/>
    <url>/2021/09/14/%E4%BB%8A%E6%97%A5%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<h1 id="今天又是CV的一天"><a href="#今天又是CV的一天" class="headerlink" title="今天又是CV的一天"></a>今天又是CV的一天</h1><h2 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h2><p>反转元音字母</p><p>指针1从头遍历，指针2从尾遍历，都遇到元音字母时交换。</p><p>为了查询速度为常数时间项，建立元音字母的哈希Set </p><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><p>强制类型转换</p><p>反转int整数，但是int可能越界，遇到异常需要置0.</p><p>用一个快捷判断就好了 (int)n == n ? (int)n : 0</p><h2 id="散会"><a href="#散会" class="headerlink" title="散会"></a>散会</h2><p>就这样吧</p>]]></content>
    
    
    <categories>
      
      <category>技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>check</title>
    <link href="/2021/09/13/check/"/>
    <url>/2021/09/13/check/</url>
    
    <content type="html"><![CDATA[<h2 id="how-to-live"><a href="#how-to-live" class="headerlink" title="how to live"></a>how to live</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>New Boy</title>
    <link href="/2021/09/13/New-Boy/"/>
    <url>/2021/09/13/New-Boy/</url>
    
    <content type="html"><![CDATA[<h1 id="今日任务"><a href="#今日任务" class="headerlink" title="今日任务"></a>今日任务</h1><p>hey各位，今天是个美好的一天</p><p>不熬夜</p><h2 id="还不知道的事"><a href="#还不知道的事" class="headerlink" title="还不知道的事"></a>还不知道的事</h2><p>不知道将会遇到什么</p><h2 id="再说吧"><a href="#再说吧" class="headerlink" title="再说吧"></a>再说吧</h2><p>再会</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
